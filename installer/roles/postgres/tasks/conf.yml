---
- name: Update postgresql authentication settings
  template:
    dest: '{{ pg_hba_location }}'
    owner: postgres
    src: pg_hba.conf.j2
  register: pg_hba_conf
  become: yes

- name: Apply postgresql general settings
  template:
    dest: '{{ pg_conf_location }}'
    owner: postgres
    src: postgresql.conf.j2
  register: pg_general_conf
  become: yes

- name: Create unix socket directory
  file:
    path: '{{ postgres_run_dir }}'
    state: directory
    owner: 'postgres'
    group: 'postgres'
    mode: 02775
    setype: 'postgresql_var_run_t'
  become: yes

- name: Configure postgresql tmpfiles.d
  template:
    src: 'postgresql.tmpfiles.d.j2'
    dest: '/usr/lib/tmpfiles.d/postgresql.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    setype: 'lib_t'
  become: yes

- name: restart postgresql when authentication settings changed
  service:
    name: '{{ postgres_init_name }}'
    state: restarted
  when: pg_hba_conf is changed or pg_general_conf is changed
  register: postgresql_restart
  become: yes

- name: wait for postgresql restart
  wait_for:
    host: localhost
    port: 5432
  when: postgresql_restart is changed
  become: yes

- name: configure postgresql to start automatically
  service:
    name: '{{ postgres_init_name }}'
    enabled: yes
  become: yes



- name: create the awx postgres user if it does not exist and set the password
  command: >-
    psql -c "CREATE USER {{ postgres_username }} WITH ENCRYPTED PASSWORD '{{ postgres_password }}';"
  become: True
  become_user: postgres
  when:
   - "postgres_username is defined and postgres_username != ''"
   - "postgres_password is defined and postgres_password != ''"
  no_log: False


- name: set postgres user password again to ensure scram-sha-256 is used (needed for upgrades from 3.5.x and earlier)
  command: |
    psql -c "ALTER ROLE {{ postgres_username }} WITH PASSWORD '{{ postgres_password }}';"
  become: True
  become_user: postgres

- name: create the postgresql database for app
  postgresql_db:
    name: "{{ postgres_database }}"
    owner: "{{ postgres_username }}"
    state: present
    login_user: postgres
  become: True
  become_user: postgres
  when:
    - "postgres_username is defined and postgres_username != ''"
    - "postgres_database is defined and postgres_database != ''"
