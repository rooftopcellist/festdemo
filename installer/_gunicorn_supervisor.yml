- hosts: "{{ instance_names|default('all') }}"
  become: yes
  gather_facts: yes
  vars:
    project_directory: "/festdemo2"
    project_repo: "https://github.com/gothinkster/django-realworld-example-app"
    project_app_name: "conduit"
    project_wsgi_application: "conduit.wsgi:application"
    project_settings_module: "conduit.settings"
    project_requirements_file: "requirements.txt"
    media_dir: /venv/media/
    static_dir: /venv/static/
    db_name: "db"
    db_user: "dbuser"
    db_password: "password"
    secret_key: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
  tasks:
    - name: Install system packages
      yum:
        name:
          - python-pip
          - supervisor
          - "@Development Tools"
          - openssl-devel
          - wget
          - zlib-devel
          - tcl
    - name: Install Sqlite3 # won't be needed when we start using postgres
      shell: "{{ item }}"
      with_items:
        - wget https://www.sqlite.org/src/tarball/sqlite.tar.gz
        - tar xzf sqlite.tar.gz
        - cd sqlite && ./configure --prefix=/usr --disable-static CFLAGS="-g"
        - cd sqlite && make
        - cd sqlite && make install
    - name: Install Python3
      shell: "{{ item }}"
      with_items:
        - wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tar.xz
        - tar -xJf Python-3.6.4.tar.xz
        - cd Python-3.6.4 && ./configure --enable-optimizations
        - cd Python-3.6.4 && make altinstall

    - name: Install virtualenv
      pip:
        name: virtualenv
        version: 15.1.0
    - name: Create virtualenv
      command: virtualenv -p /usr/local/bin/python3  /venv
               creates=/venv/bin/activate
    - name: Clone project
      git:
        repo: "{{ project_repo }}"
        dest: "{{ project_directory }}"
    - name: Install project libs to virtualenv
      pip:
        virtualenv: /venv
        requirements: "{{ project_directory}}/{{ project_requirements_file }}"
    - name: Create gunicorn user
      user:
        name: gunicorn
        state: present
    - name: create gunicorn group
      group:
        name: gunicorn
        system: yes
        state: present
    - name: add gunicorn user to group
      user:
        name: gunicorn
        group: gunicorn
        state: present
    - name: Set application file permissions
      file:
        path: /venv
        recurse: yes
        owner: gunicorn
        group: gunicorn
        state: directory
      changed_when: false
    - name: Install libs to virtualenv
      pip:
        virtualenv: '/venv'
        name:
          - gunicorn
    - name: Create log folder
      file:
        path: /venv/logs
        owner: gunicorn
        group: gunicorn
        mode: 0774
        state: directory
    - name: Set virtualenv postactivate script
      template:
        src: virtualenv_postactivate.j2
        dest: /venv/bin/postactivate
        owner: gunicorn
        group: gunicorn
        mode: 0640
        backup: yes
      notify: restart application
    - name: Set gunicorn script
      template:
        src: run_gunicorn.sh.j2
        dest: /venv/bin/run_gunicorn.sh
        owner: gunicorn
        group: gunicorn
        mode: 0755
        backup: yes
    - name: Install supervisor config
      template:
        src: supervisor.conf.j2
        dest: /etc/supervisord.d/{{ project_app_name }}.ini
        force: yes
    - name: Recreate systemd tmp files
      command: systemd-tmpfiles --create
    - name: start/enable supervisord process
      service:
        name: supervisord
        state: restarted
        enabled: yes
    - name: Wait for the supervisor socket
      wait_for:
        path: /var/run/supervisor/supervisor.sock
        timeout: 30
  handlers:
    - name: restart application
      supervisorctl:
        name: "{{ project_app_name }}"
        state: restarted
